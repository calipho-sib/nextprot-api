## Iterates through the interaction
#Interactions begin
#foreach($interaction in $entry.getInteractionsByIsoform($isoform-name))
#set($iso-interaction-iri=$interaction.id + "-" + $isoform-name)  
isoform:$isoform-name :interaction interaction:$iso-interaction-iri .
#end
#Interactions end


#foreach($interaction in $entry.getInteractionsByIsoform($isoform-name))
#set($iso-interaction-iri=$interaction.id + "-" + $isoform-name)  
#foreach($interactant in $interaction.getInteractants())
#if(!$interactant.isEntryPoint() || $interaction.isSelfInteraction())
#set($hasInteraction=true)  
interaction:$iso-interaction-iri a :ProteinInteraction;
#if ($interaction.isInteractionSpecificForIsoform($isoform-name))
  :specificity :SPECIFIC ;
#else
  :specificity :BY_DEFAULT ;
#end
  :quality :$interaction.quality ;
  :selfInteraction "$interaction.selfInteraction"^^xsd:boolean;
  :withEvidence evidence:$interaction.evidenceId;
#if($interactant.isNextprot())
#if($interactant.isIsoform())
  :with isoform:$interactant.getNextprotAccession();
#else
  :with entry:$interactant.getNextprotAccession();
#end
## otherwise interactant is not an entry nor an isoform described in nextprot, it is an xref
#else
  :with [
    rdf:type :Xref ;
    :provenance db:$StringUtils.slug($interactant.database);
    :accession "$interactant.accession"^^xsd:string ;
    :url "$interactant.url"^^xsd:string;
    ] ;
#end    
#end  
#end 
#if($hasInteraction)
  .
#end
#set($hasInteraction=false)    
#end


## Publish evidence details about interaction
#foreach($interaction in $entry.getInteractionsByIsoform($isoform-name))
evidence:$interaction.evidenceId 
  rdf:type :Evidence ;
  :code :$interaction.evidenceType ;
  :assignedBy source:$interaction.evidenceDatasource;
  :quality :$interaction.evidenceQuality ;
  :reference [
    a :Xref;
    :provenance db:$StringUtils.slug($interaction.evidenceXrefDB) ;
    :accession "$interaction.evidenceXrefAC"^^xsd:string ;
  ];
  :numberOfExperiments $interaction.numberOfExperiments; 
  .
#end

