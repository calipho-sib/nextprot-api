<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref local="auth0AuthenticationProvider" />
			</list>
		</property>
	</bean>

	<bean id="forbiddenEntryPoint"
		class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

	<security:http entry-point-ref="forbiddenEntryPoint" pattern="/user/**">
		<security:intercept-url pattern="/user/**" access='ROLE_USER' />
		<security:custom-filter ref="auth0Filter" before="PRE_AUTH_FILTER"></security:custom-filter>
	</security:http>

	<!--  
	<security:http entry-point-ref="forbiddenEntryPoint" pattern="/user/**">
		<security:intercept-url pattern="/user/**" access='ROLE_USER' />
		<security:http-basic/>
	</security:http>
	-->

	<security:http auto-config="true" use-expressions="true" pattern="/**">
		<security:intercept-url pattern="/**" access="permitAll" />
	</security:http>

	<bean id="auth0Filter"
		class="sib.calipho.spring.security.auth0.Auth0AuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager"></property>
	</bean>

	<bean id="auth0AuthenticationProvider"
		class="sib.calipho.spring.security.auth0.Auth0AuthenticationProvider">
		<property name="clientSecret" value="${auth0.clientSecret}"></property>
		<property name="clientId" value="${auth0.clientId}"></property>
	</bean>


	<security:authentication-manager>
		<security:authentication-provider
			ref="auth0AuthenticationProvider" />
	</security:authentication-manager>

	<!-- Note that you can't replace filters which are created by the use of 
		the <http> element itself - SecurityContextPersistenceFilter, ExceptionTranslationFilter 
		or FilterSecurityInterceptor. Some other filters are added by default, but 
		you can disable them. An AnonymousAuthenticationFilter is added by default 
		and unless you have session-fixation protection disabled, a SessionManagementFilter 
		will also be added to the filter chain. -->

</beans>