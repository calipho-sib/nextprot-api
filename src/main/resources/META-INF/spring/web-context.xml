<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
 		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/oxm 
		http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd
		http://www.springframework.org/schema/lang 
		http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
		http://www.springframework.org/schema/security
  	    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<import resource="core-context.xml" />
	<import resource="auth0-security-context.xml" />

	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
	<mvc:interceptors>
		<bean class="org.nextprot.api.core.aop.interceptor.ConcurrentRequestInterceptor" />
	</mvc:interceptors>
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources -->
	<!-- <mvc:resources location="/, classpath:/META-INF/web-resources/" mapping="/resources/**"/> -->

	<!-- Used for documentation -->
	<bean id="documentationController" class="org.jsondoc.springmvc.controller.JSONDocController">
		<property name="version" value="0.1 beta" />
	</bean>


	<!-- This bean sets up the Velocity environment for us based on a root path 
		for templates. Optionally, a properties file can be specified for more control 
		over the Velocity environment, but the defaults are pretty sane for file 
		based template loading. -->
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/velocity/" />
		<property name="configLocation" value="/WEB-INF/velocity/velocity.properties" />
	</bean>


	<!-- View resolvers can also be configured with ResourceBundles or XML files. 
		If you need different view resolving based on Locale, you have to use the 
		resource bundle resolver. -->

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="ttl" value="text/turtle" />
				<entry key="html" value="text/html" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
				<bean
					class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
					<property name="prefix" value="" />
					<property name="suffix" value=".vm" />
					<property name="contentType" value="application/xml;charset=UTF-8" />
					<property name="cache" value="true" />
				</bean>
				<bean
					class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
					<property name="prefix" value="" />
					<property name="suffix" value=".vm" />
					<property name="contentType" value="application/json;charset=UTF-8" />
				</bean>
				<bean
					class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
					<property name="prefix" value="turtle/" />
					<property name="suffix" value=".vm" />
					<property name="contentType" value="text/turtle;charset=UTF-8" />
				</bean>
				<bean
					class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
					<property name="prefix" value="txt/" />
					<property name="suffix" value=".vm" />
					<property name="contentType" value="text/plain;charset=UTF-8" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="contentType" value="application/json;charset=UTF-8" />
				</bean>
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller">
							<property name="supportedClasses">
								<list>
									<value>java.lang.String</value>
									<value>java.util.List</value>
									<value>org.nextprot.api.core.controller.error.RestErrorResponse
									</value>
									<value>org.nextprot.api.core.domain.Publication</value>
									<value>org.nextprot.api.core.domain.PublicationAuthor</value>
									<value>org.nextprot.api.core.domain.CvJournal</value>
								</list>
							</property>
						</bean>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<beans profile="pro,dev">
		<bean id="adminController" class="org.nextprot.api.core.controller.AdminController" />
	</beans>


	
</beans>
