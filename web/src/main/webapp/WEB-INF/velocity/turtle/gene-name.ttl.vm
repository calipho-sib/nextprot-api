#if($geneName.isMain())
##Create ProteineName individual - *** TODO:Create prefix name: ***

#set($qualifier = $StringUtils.toCamelCase($geneName.getComposedName(),true))

name:geneNameRec_$geneName.id rdf:type :$className;
  rdfs:label "$StringUtils.clean($geneName.name)"^^xsd:string.

entry:$entry.getUniqueName() :recommendedName name:geneNameRec_$geneName.id.
##gene:$entry.getUniqueName() :recommendedName name:geneNameRec_$geneName.id. ## This recommended name is associated to the entry NX_*

#set($parentUri = "name:geneNameRec_$geneName.id")

#else
##Create GeneName individual - *** Create prefix name: ***
##name:entryNameAlt$altNamesCount.toString()_$geneName.id rdf:type :$className.
##:alternativeName ##rdf:type :$className;
#set($UNESCAPED_CDATA_SYNONYM = $geneName.name)
#set($nameType = $geneName.getCategory())
#if($nameType == "ORF")

name:geneNameOrf$orfNamesCount.toString()_$geneName.id rdf:type :ORFName;
  rdfs:label "$StringUtils.clean($UNESCAPED_CDATA_SYNONYM)"^^xsd:string.

#if($parentName != 0)
$parentUri :hasOrfName name:geneNameOrf$orfNamesCount.toString()_$geneName.id.
#else
entry:$entry.getUniqueName() :hasOrfName name:geneNameOrf$orfNamesCount.toString()_$geneName.id.
#set($parentUri = "name:geneNameOrf$orfNamesCount.toString()_$geneName.id")
#end

#set($orfNamesCount = $orfNamesCount + 1)

#elseif($nameType == "gene name")
## Alternative Name
#if($parentName != 0)
##PARENT NAME NOT NULL and PARENT_NAME: $StringUtils.clean($parentName.name)

name:geneNameAlt$altNamesCount.toString()_$geneName.id rdf:type :GeneName;
  rdfs:label "$StringUtils.clean($UNESCAPED_CDATA_SYNONYM)"^^xsd:string.

$parentUri :alternativeName name:geneNameAlt$altNamesCount.toString()_$geneName.id.
##entry:$entry.getUniqueName() :alternativeName name:entryNameAlt$altNamesCount.toString()_$geneName.id.

#else
name:geneNameAlt$altNamesCount.toString()_$geneName.id rdf:type :GeneName;
  rdfs:label "$StringUtils.clean($UNESCAPED_CDATA_SYNONYM)"^^xsd:string.

entry:$entry.getUniqueName() :alternativeName name:geneNameAlt$altNamesCount.toString()_$geneName.id.
#set($parentUri = "name:geneNameAlt$altNamesCount.toString()_$geneName.id")
#end
#set($altNamesCount = $altNamesCount + 1)

#else
name:geneNameAlt$altNamesCount.toString()_$geneName.id :$StringUtils.toCamelCase($geneName.getComposedName(),true) "$StringUtils.clean($UNESCAPED_CDATA_SYNONYM)"^^xsd:string.
#set($altNamesCount = $altNamesCount + 1)
#end
##];
#end
#foreach($synonym in $geneName.synonyms)
##SYNONYM
#set($parentName = $geneName)
#set($geneName = $synonym)
#parse('turtle/gene-name.ttl.vm')
##END SYNONYM
#end
