# Protein entry and its isoforms

entry:$entry.getUniqueName() a :Entry;
  skos:exactMatch uniprot:$entry.getUniprotName();
  :swissprotPage unipage:$entry.getUniprotName();
  :isoformCount "$entry.getIsoforms().size()"^^xsd:integer;
## Links to isoforms
#foreach($isoform in $entry.getIsoforms())
#set($isoform-name =  $isoform.getUniqueName())
  :isoform isoform:$isoform-name ;
#end
  .

# Names of isoforms

#foreach($isoform in $entry.getIsoforms())
#set($isoform-name =  $isoform.getUniqueName())
isoform:$isoform-name
#if($isoform.isSwissProtDisplayedIsoform()) 
  :swissprotDisplayed "true"^^xsd:boolean ;
#else
  :swissprotDisplayed "false"^^xsd:boolean ; 
#end
  .
#if($isoform.getMainEntityName())
#if($isoform.getMainEntityName().getValue())
#set($mainEntityName = $isoform.getMainEntityName())  
#set($name-iri = "name:" + "$isoform-name" + "_" + "$mainEntityName.id" )	
$name-iri 
  rdf:type :IsoformName ;
  rdfs:label "$StringUtils.clean($mainEntityName.name)"^^xsd:string ;
  .
isoform:$isoform-name  
  :name $name-iri ;
  :recommendedName $name-iri ;
#end
#end
  .
#if($isoform.getSynonyms())
#foreach($syn in $isoform.getSynonyms())
#set($name-iri = "name:" + "$isoform-name" + "_" + "$syn.id" )	
#set($parent-name-iri = "name:" + "$isoform-name" + "_" + "$syn.parentId" )	
$name-iri 
  rdf:type :IsoformName ;
  rdfs:label "$StringUtils.clean($syn.name)"^^xsd:string ;
  .
$parent-name-iri :otherName $name-iri .
isoform:$isoform-name  
  :name $name-iri ;
  :alternativeName $name-iri ;
  .
#end
#end
#end

# Overview
#parse('turtle/overview.ttl.vm')

# Keywords 
#parse('turtle/classifications-list.ttl.vm')

# Gene
#parse('turtle/chromosomal-location-list.ttl.vm')

#foreach($isoform in $entry.getIsoforms())
## Sets the isoform name
#set($isoform-name =  $isoform.getUniqueName())
#parse('turtle/isoform-entry.ttl.vm')
#end

## Xrefs & Identifiers
#parse('turtle/entry-references.ttl.vm')

