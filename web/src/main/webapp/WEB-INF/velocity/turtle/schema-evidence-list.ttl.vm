#if($prefix)
#parse("turtle/prefix.ttl.vm")
#end

#
# Define evidences
#

:Evidence
      rdf:type owl:Class ;
      rdfs:label "Evidence"^^xsd:string ;
      rdfs:comment "Evidence"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .

:evidence
      a rdf:Property, owl:ObjectProperty ;
      rdfs:label "evidence"^^xsd:string ;
      rdfs:comment "Links an annotation with the evidence supporting it"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      rdfs:domain :AnnotationType ;
      rdfs:range :Evidence ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .

:negativeEvidence
      a rdf:Property, owl:ObjectProperty ;
      rdfs:label "evidence"^^xsd:string ;
      rdfs:comment "Links an annotation with an evidence unsupporting it"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      rdfs:domain :AnnotationType ;
      rdfs:range :Evidence ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .

:assignedBy
      a rdf:Property, owl:FunctionalProperty, owl:ObjectProperty ;
      rdfs:label "assigned by"^^xsd:string ;
      rdfs:comment "Links an evidence to its source"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      rdfs:domain :Evidence ;
      rdfs:range :Source ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .
      
:goQualifier
    rdfs:isDefinedBy <http://nextprot.org/rdf> ;
    :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
    rdfs:label "go qualifier"^^xsd:string ;
    rdf:type  owl:DatatypeProperty ;
    rdfs:domain :Evidence ;
    rdfs:range :GoQualifier ;
    .
    
:GoQualifier
      rdf:type owl:Class ;
      rdfs:label "GO Qualifier"^^xsd:string ;
      rdfs:comment "GO Qualifier"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      owl:equivalentClass [ a owl:Class ; owl:oneOf ( :Enables :Contributes_to :Is_active_in :Part_of :Located_in :Colocalizes_with ) ] ;
      .

:Enables
      rdf:type owl:Class, owl:NamedIndividual, :GoQualifier  ;
      rdfs:label "Enables"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .

:Contributes_to
      rdf:type owl:Class, owl:NamedIndividual, :GoQualifier  ;
      rdfs:label "Contributes to"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .
:Is_active_in
      rdf:type owl:Class, owl:NamedIndividual, :GoQualifier  ;
      rdfs:label "Is active in"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .
:Part_of
      rdf:type owl:Class, owl:NamedIndividual, :GoQualifier  ;
      rdfs:label "Part of"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .
:Located_in
      rdf:type owl:Class, owl:NamedIndividual, :GoQualifier  ;
      rdfs:label "Located in"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .
:Colocalizes_with
      rdf:type owl:Class, owl:NamedIndividual, :GoQualifier  ;
      rdfs:label "Colocalizes with"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .

      