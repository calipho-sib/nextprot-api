#if($prefix)
#parse("turtle/prefix.ttl.vm")
#end

#
# Define evidences
#

:Evidence
      rdf:type owl:Class ;
      rdfs:label "Evidence"^^xsd:string ;
      rdfs:comment "Evidence"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .

:evidence
      a rdf:Property, owl:ObjectProperty ;
      rdfs:label "evidence"^^xsd:string ;
      rdfs:comment "Links an annotation with the evidence supporting it"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      rdfs:domain :AnnotationType ;
      rdfs:range :Evidence ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .

:negativeEvidence
      a rdf:Property, owl:ObjectProperty ;
      rdfs:label "evidence"^^xsd:string ;
      rdfs:comment "Links an annotation with an evidence unsupporting it"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      rdfs:domain :AnnotationType ;
      rdfs:range :Evidence ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .

:assignedBy
      a rdf:Property, owl:FunctionalProperty, owl:ObjectProperty ;
      rdfs:label "assigned by"^^xsd:string ;
      rdfs:comment "Links an evidence to its source"^^xsd:string ;
      rdfs:isDefinedBy <http://nextprot.org/rdf> ;
      rdfs:domain :Evidence ;
      rdfs:range :Source ;
      :sourceFile "schema-evidence-list.ttl.vm"^^xsd:string ;
      .
      
