#if($prefix)
#parse("turtle/prefix.ttl.vm")
#end

#
# Define evidences
#

:Evidence
      rdf:type owl:Class ;
      rdfs:subClassOf owl:Thing;
      .
                
:evidence
      rdf:type owl:ObjectProperty ;
      rdfs:domain :Annotation ;
      rdfs:range [
#       a :Evidence;
        owl:oneOf( :IDA :IPI :IGI :IEP :ISS :ISO :ISA :ISM :IGC :RCA :TAS :NAS :IC :ND :IEA :NR :IMP :IBA :IBD :IKR :IRD :EXP);
      ];
      .
      
      
:assignedBy
      a rdf:Property, owl:FunctionalProperty ;
      rdfs:domain :Evidence ;
      rdfs:range :Source
      .
      
:Integrated
      rdf:type owl:Class ;
      rdfs:comment "level of integration"^^xsd:string ;
      :notIn :Selected,:Single;
      .

:Selected
      rdf:type owl:Class ;
      rdfs:comment "level of integration"^^xsd:string ;
      :notIn :Integrated,:Single;
      .

:Single
      rdf:type owl:Class ;
      rdfs:comment "level of integration"^^xsd:string ;
      :notIn :Selected,:Integrated;
      .
      

:GOEvidenceCode
      rdf:type owl:Class ;
      rdfs:comment "GO evidence code"^^xsd:string ;
      rdfs:subClassOf owl:Thing;
      .

# Links between :GOEvidenceCode  :EvidenceCodeOntology
## Manual mapping by pam, TODO: to be validated

:IDA :related  term:ECO_0000002 .  
:IPI :related  term:ECO_0000021 .   
:IGI  :related  term:ECO_0000011 .  
:IEP  :related term:ECO_0000008 .  
:ISS  :related term:ECO_0000027 , term:ECO_0000044 .  
:ISO  :related  term:ECO_0000201 .  
:ISA  :related  term:ECO_0000200 .  
:ISM  :related  term:ECO_0000202 .  
:IGC  :related  term:ECO_0000177 .  
:RCA  :related  term:ECO_0000245 .  
:TAS  :related  term:ECO_0000033 .  
:NAS  :related  term:ECO_0000034 .  
:IC  :related  term:ECO_0000205 .  
:ND  :related  term:ECO_0000035 .  
:IEA  :related  term:ECO_0000203 .  
##:NR  :related  ??? .   
:IMP  :related  term:ECO_0000015 .  
:IBA  :related  term:ECO_0000308 .  
:IBD  :related  term:ECO_0000214 .  
:IKR  :related  term:ECO_0000216 .  
:IRD  :related  term:ECO_0000215 .  
:EXP :related  term:ECO_0000006 .  


#foreach($evidence in $evidenceList)
:$evidence.getType()
   rdf:type :GOEvidenceCode; 
   rdfs:comment "$evidence.getDescription()"^^xsd:string;
   rdfs:label "$evidence.getType()"^^xsd:string; 
   rdfs:seeAlso "http://www.nextprot.org/manual/$evidence.getType()"^^xsd:anyURI; 
   rdfs:subClassOf owl:Thing;
   :notIn :$evidence.getDisjointWith(", :");
   .   





#end
##
## Define evidences properties
##
 
##foreach($evidence in $evidenceList)
## -------  $evidence.getType() 
##:$evidence.getType()
##   a rdf:Property, owl:FunctionalProperty;
##   rdfs:subPropertyOf :evidence;
##   rdfs:label "$evidence.getDescription()"^^xsd:string 
##   rdfs:domain :Annotation;
##   rdfs:range :$StringUtils.toCamelCase($evidence.getDescription(), false);
##   .
###end